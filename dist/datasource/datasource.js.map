{"version":3,"sources":["../../src/datasource/datasource.js"],"names":[],"mappings":"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","file":"datasource.js","sourcesContent":["import TableModel from 'app/core/table_model';\nimport moment from 'moment';\n\nexport class BosunDatasource {\n    constructor(instanceSettings, $q, backendSrv, templateSrv, $sce, $rootScope) {\n        this.annotateUrl = instanceSettings.jsonData.annotateUrl;\n        this.type = instanceSettings.type;\n        this.url = instanceSettings.url;\n        this.name = instanceSettings.name;\n        this.showHelper = instanceSettings.jsonData.enableQueryHelper;\n\t\tthis.preRelease = instanceSettings.jsonData.enablePreReleaseFeatures;\n        this.q = $q;\n        this.backendSrv = backendSrv;\n        this.templateSrv = templateSrv;\n        this.sce = $sce;\n        this.$rootScope = $rootScope;\n        this.IncidentListQuery = this.IncidentListQuery.bind(this);\n    }\n\n    makeTable(result) {\n        var table = new TableModel();\n        if (!result || Object.keys(result).length < 1) {\n            return [table];\n        }\n        var tagKeys = [];\n        _.each(result[0].Group, function (v, tagKey) {\n            tagKeys.push(tagKey);\n        });\n        tagKeys.sort();\n        table.columns = _.map(tagKeys, function (tagKey) {\n            return { \"text\": tagKey };\n        });\n        table.columns.push({ \"text\": \"value\" });\n        _.each(result, function (res) {\n            var row = [];\n            _.each(res.Group, function (tagValue, tagKey) {\n                row[tagKeys.indexOf(tagKey)] = tagValue;\n            });\n            row.push(res.Value);\n            table.rows.push(row);\n        });\n        return [table];\n    }\n\n    transformMetricData(result, target, options) {\n        var tagData = [];\n        _.each(result.Group, function (v, k) {\n            tagData.push({ 'value': v, 'key': k });\n        });\n        var sortedTags = _.sortBy(tagData, 'key');\n        var metricLabel = \"\";\n        if (target.alias) {\n            var scopedVars = _.clone(options.scopedVars || {});\n            _.each(sortedTags, function (value) {\n                scopedVars['tag_' + value.key] = { \"value\": value.value };\n            });\n            metricLabel = this.templateSrv.replace(target.alias, scopedVars);\n        } else {\n            tagData = [];\n            _.each(sortedTags, function (tag) {\n                tagData.push(tag.key + '=' + tag.value);\n            });\n            metricLabel = '{' + tagData.join(', ') + '}';\n        }\n        var dps = [];\n        _.each(result.Value, function (v, k) {\n            dps.push([v, parseInt(k) * 1000]);\n        });\n        return { target: metricLabel, datapoints: dps };\n    }\n\n    performTimeSeriesQuery(query, target, options) {\n        var exprDate = options.range.to.utc().format('YYYY-MM-DD');\n        var exprTime = options.range.to.utc().format('HH:mm:ss');\n        var url = this.url + '/api/expr?date=' + encodeURIComponent(exprDate) + '&time=' + encodeURIComponent(exprTime);\n        return this.backendSrv.datasourceRequest({\n            url: url,\n            method: 'POST',\n            data: query,\n            datasource: this\n        }).then(response => {\n            if (response.status === 200) {\n                var result;\n                if (response.data.Type === 'series') {\n                    result = _.map(response.data.Results, function (result) {\n                        return response.config.datasource.transformMetricData(result, target, options);\n                    });\n                }\n                if (response.data.Type === 'number') {\n                    result = response.config.datasource.makeTable(response.data.Results);\n                }\n                return { data: result };\n            }\n        });\n    }\n\n    _metricsStartWith(metricRoot) {\n        return this.backendSrv.datasourceRequest({\n            url: this.url + \"/api/metric\",\n            method: 'GET',\n            datasource: this\n        }).then((data) => {\n            var filtered = _.filter(data.data, (v) => {\n                return v.startsWith(metricRoot);\n            });\n            return filtered;\n        });\n    }\n\n    _tagKeysForMetric(metric) {\n        return this.backendSrv.datasourceRequest({\n            url: this.url + \"/api/tagk/\" + metric,\n            method: 'GET',\n            datasource: this\n        }).then((data) => {\n            return data.data;\n        });\n    }\n\n    _tagValuesForMetricAndTagKey(metric, key) {\n        return this.backendSrv.datasourceRequest({\n            url: this.url + \"/api/tagv/\" + key + \"/\" + metric,\n            method: 'GET',\n            datasource: this\n        }).then((data) => {\n            return data.data;\n        });\n    }\n\n    _metricMetadata(metric) {\n        return this.backendSrv.datasourceRequest({\n            url: this.url + \"/api/metadata/metrics?metric=\" + metric,\n            method: 'GET',\n            datasource: this\n        }).then((data) => {\n            return data.data;\n        });\n    }\n\n    metricFindQuery(query) {\n        var findTransform = function (result) {\n            return _.map(result, function (value) {\n                return { text: value };\n            });\n        };\n        // Get Metrics that start with the first argument\n        var metricsRegex = /metrics\\((.*)\\)/;\n        // Get tag keys for the given metric (first argument)\n        var tagKeysRegex = /tagkeys\\((.*)\\)/;\n        // Get tag values for the given metric (first argument) and tag key (second argument)\n        var tagValuesRegex = /tagvalues\\((.*),(.*)\\)/;\n\n        var metricsQuery = query.match(metricsRegex)\n        if (metricsQuery) {\n            return this._metricsStartWith(metricsQuery[1]).then(findTransform);\n        }\n\n        var tagKeysQuery = query.match(tagKeysRegex)\n        if (tagKeysQuery) {\n            return this._tagKeysForMetric(tagKeysQuery[1]).then(findTransform);\n        }\n\n        var tagValuesQuery = query.match(tagValuesRegex)\n        if (tagValuesQuery) {\n            return this._tagValuesForMetricAndTagKey(tagValuesQuery[1].trim(), tagValuesQuery[2].trim()).then(findTransform);\n        }\n\n        return this.q.when([]);\n    }\n\n    query(options) {\n        var queries = [];\n        // Get time values to replace $start\n        // The end time is what bosun regards as 'now'\n        var secondsAgo = options.range.to.diff(options.range.from.utc(), 'seconds');\n        secondsAgo += 's';\n        _.each(options.targets, _.bind(function (target) {\n            if (!target.expr || target.hide) {\n                return;\n            }\n            var query = {};\n\n            query = this.templateSrv.replace(target.expr, options.scopedVars, 'pipe');\n            query = query.replace(/\\$start/g, secondsAgo);\n            query = query.replace(/\\$ds/g, options.interval);\n            queries.push(query);\n        }, this));\n\n        // No valid targets, return the empty result to save a round trip.\n        if (_.isEmpty(queries)) {\n            var d = this.q.defer();\n            d.resolve({ data: [] });\n            return d.promise;\n        }\n\n        var allQueryPromise = _.map(queries, _.bind(function (query, index) {\n            return this.performTimeSeriesQuery(query, options.targets[index], options);\n        }, this));\n\n        return this.q.all(allQueryPromise)\n            .then(function (allResponse) {\n                var result = [];\n                _.each(allResponse, function (response) {\n                    _.each(response.data, function (d) {\n                        result.push(d);\n                    });\n                });\n                return { data: result };\n            });\n    }\n\n    _processAnnotationQueryParam(annotation, fieldName, fieldObject, params) {\n        var param = {};\n        var key = fieldName;\n        if (!fieldObject) {\n            return params;\n        }\n        if (fieldObject.empty) {\n            key += \":Empty\"\n        }\n        if (fieldObject.not) {\n            if (!fieldObject.empty) {\n                key += \":\"\n            }\n            key += \":Empty\"\n        }\n        params[key] = this.templateSrv.replace(fieldObject.value, this.templateSrv.variables, 'pipe');\n        return params\n    }\n\n    annotationQuery(options) {\n        var annotation = options.annotation;\n        var params = {};\n        params.StartDate = options.range.from.unix();\n        params.EndDate = options.range.to.unix();\n        params = this._processAnnotationQueryParam(annotation, \"Source\", annotation.Source, params)\n        params = this._processAnnotationQueryParam(annotation, \"Host\", annotation.Host, params)\n        params = this._processAnnotationQueryParam(annotation, \"CreationUser\", annotation.CreationUser, params)\n        params = this._processAnnotationQueryParam(annotation, \"Owner\", annotation.Owner, params)\n        params = this._processAnnotationQueryParam(annotation, \"Category\", annotation.Category, params)\n        params = this._processAnnotationQueryParam(annotation, \"Url\", annotation.Url, params)\n        var url = this.url + '/api/annotation/query?';\n        if (Object.keys(params).length > 0) {\n            url += jQuery.param(params);\n        }\n        var rawUrl = this.rawUrl;\n        return this.backendSrv.datasourceRequest({\n            url: url,\n            method: 'GET',\n            datasource: this\n        }).then(response => {\n            if (response.status === 200) {\n                var events = [];\n                _.each(response.data, (a) => {\n                    var text = [];\n                    if (a.Source) {\n                        text.push(\"Source: \" + a.Source);\n                    }\n                    if (a.Host) {\n                        text.push(\"Host: \" + a.Host);\n                    }\n                    if (a.CreationUser) {\n                        text.push(\"User: \" + a.CreationUser);\n                    }\n                    if (a.Owner) {\n                        text.push(\"Owner: \" + a.Owner);\n                    }\n                    if (a.Url) {\n                        text.push('<a href=\"' + a.Url + '\">' + a.Url.substring(0, 50) + '</a>');\n                    }\n                    if (a.Message) {\n                        text.push(a.Message);\n                    }\n                    var grafanaAnnotation = {\n                        annotation: annotation,\n                        time: moment(a.StartDate).utc().unix() * 1000,\n                        title: a.Category,\n                        text: text.join(\"<br>\")\n                    }\n                    events.push(grafanaAnnotation);\n                });\n                return events;\n            }\n        });\n    }\n\n    // Since the API response is not JSON, we need a transform interceptor to \n    // handle a text response. Otherwise we just get i.e. 'Internal Server Error'\n    _plainTextResponseTransform(data, headers) {\n        if (headers(\"content-type\").includes(\"text/plain\")) {\n            return { message: data };\n        }\n        return angular.fromJson(data);\n    }\n\n    IncidentListQuery(query) {\n        var self = this;\n        var url = this.url + '/api/incidents/open';\n        if (query) {\n\t\t\tvar interpolatedQuery = this.templateSrv.replace(query, this.templateSrv.variables, 'pipe');\n            url += '?filter=' + encodeURIComponent(interpolatedQuery)\n        }\n        return this.backendSrv.datasourceRequest({\n            url: url,\n            method: 'GET',\n            transformResponse: this._plainTextResponseTransform\n        }).then(response => {\n            if (response.status === 200) {\n                return response.data;\n            }\n        }, (error) => {\n            self.$rootScope.appEvent('alert-error', ['IncidentListQuery Error', error.data.message]);\n        })\n    }\n\n    AlertBodyHTML(alertKey) {\n        return this.backendSrv.datasourceRequest({\n            url: this.url + '/api/status?ak=' + encodeURIComponent(alertKey),\n            method: 'GET'\n        }).then(response => {\n            if (response.status === 200) {\n                return this.sce.trustAsHtml(response.data[alertKey].Body);\n            }\n        })\n    }\n\n    submitAction(actionObj) {\n        var self = this;\n        \n        return this.backendSrv.datasourceRequest({\n            url: this.url + '/api/action',\n            method: 'POST',\n            data: actionObj,\n            datasource: this,\n            transformResponse: this._plainTextResponseTransform\n        }).then((data) => {\n            self.$rootScope.appEvent('alert-success', ['Incident Action Succeeded', ''])\n        }, (error) => {\n            self.$rootScope.appEvent('alert-error', ['Incident Action Error', error.data.message]);\n        })\n    }\n\n    // Required\n    // Used for testing datasource in datasource configuration pange\n    testDatasource() {\n        return this.backendSrv.datasourceRequest({\n            url: this.url + '/',\n            method: 'GET'\n        }).then(response => {\n            if (response.status === 200) {\n                return { status: \"success\", message: \"Data source is working\", title: \"Success\" };\n            }\n        });\n    }\n}\n\n"]}