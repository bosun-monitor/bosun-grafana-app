{"version":3,"sources":["../../../src/panels/incident-list/module.js"],"names":[],"mappings":"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","file":"module.js","sourcesContent":["import _ from 'lodash';\nimport moment from 'moment';\nimport {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport {bosunIncidentListPanelEditor} from './editor';\n\nvar statusMap = {\n    \"normal\": 0,\n    \"warning\": 1,\n    \"critical\": 2,\n    \"unknown\": 3\n}\n\nexport class BosunIncidentListCtrl extends MetricsPanelCtrl {\n    constructor($scope, $injector, $rootScope, $window, datasourceSrv, templateSrv, utilSrv, backendSrv, dashboardSrv) {\n        super($scope, $injector);\n        var self = this;\n        this.panelCtrl = $scope.ctrl;\n        this.datasourceSrv = datasourceSrv;\n        this.$window = $window;\n        this.templateSrv = templateSrv;\n        this.$rootScope = $rootScope;\n        this.linkUrl = \"\";\n        this.incidentList = [];\n        this.refreshData = this.refreshData.bind(this);\n        this.refreshData();\n        this.utilSrv = utilSrv;\n        this.bodyHTML = \"\";\n        this.reversedFields = {};\n        this.showHelp = 0;\n        this.storeId = dashboardSrv.currentDashboard.id + \"-\" + this.panel.id;\n        backendSrv.get('/api/user').then(user => {\n            this.user = user;\n        });\n\t\tthis.datasourceSrv.get(this.panel.datasource).then(datasource => {\n\t\t\tthis.preRelease = datasource.preRelease;\n\t\t});\n    }\n\n    onInitMetricsPanelEditMode() {\n        this.fullscreen = true;\n        this.addEditorTab('Options', bosunIncidentListPanelEditor, 2);\n    }\n\n    refresh() {\n        this.onMetricsPanelRefresh();\n    }\n\n    getSort() {\n        return this.$window.sessionStorage.getItem(this.storeId + \"sort\");\n    }\n\n    setSort(type, field, rev) {\n        this.$window.sessionStorage.setItem(this.storeId + \"sort\", [type, field, rev].join(\":\"));\n    }\n\n    callSort() {\n        var sortSpec = this.getSort();\n        if (!sortSpec || sortSpec == \"\") {\n            return;\n        }\n        // Property, Type, Reverse?\n        var split = sortSpec.split(\":\");\n        this.reversedFields[split[0]] = split[2] == \"true\";\n        if (split[1] == \"status\") {\n            this.sortIncidentsByStatus(split[0], true);\n        }\n        if (split[1] == \"alpha\") {\n            this.sortIncidents(split[0], true);\n        }\n    }\n\n    onMetricsPanelRefresh() {\n        // ignore fetching data if another panel is in fullscreen\n        if (this.otherPanelInFullscreenMode()) { return; }\n        this.refreshData();\n    }\n\n    sortIncidents(property, noswap) {\n        this.incidentList = _.sortBy(this.incidentList, 'Id');\n        this.incidentList = _.sortBy(this.incidentList, property)\n        if (!noswap) {\n            this.reversedFields[property] = this.reversedFields[property] == false;\n        }\n        this.setSort(property, \"alpha\", this.reversedFields[property])\n        if (this.reversedFields[property] == true) {\n            this.incidentList.reverse();\n        }\n    }\n\n    sortIncidentsByStatus(property, noswap) {\n        this.incidentList = _.sortBy(this.incidentList, 'Id');\n        this.incidentList = _.sortBy(this.incidentList, (incident) => {\n            return statusMap[incident[property]];\n        });\n        if (!noswap) {\n            this.reversedFields[property] = this.reversedFields[property] == false;\n        }\n        this.setSort(property, \"status\", this.reversedFields[property])\n        if (this.reversedFields[property] == true) {\n            this.incidentList.reverse();\n        }\n    }\n\n    refreshData() {\n        var query = this.panel.query;\n        var that = this;\n        return this.datasourceSrv.get(this.panel.datasource)\n            .then(datasource => {\n                datasource.IncidentListQuery(query).then((data) => {\n                    data = _.each(data, (item) => {\n                        item.incidentLink = datasource.annotateUrl + \"/incident?id=\" + item.Id;\n                        item.bodyHTML = \"\";\n                        return item;\n                    })\n                    that.incidentList = data;\n                    that.callSort();\n                })\n            });\n    }\n\n    fmtTime(unixTS, relativeOnly) {\n        var m = moment.unix(unixTS);\n        var relative = '(' + m.fromNow() + ')'\n        if (relativeOnly) {\n            return relative;\n        }\n        return m.format('YYYY-MM-DD HH:mm:ss ') + relative;\n    }\n\n    statusClass(prefix, status) {\n        switch (status) {\n            case \"critical\": return prefix + \"error\";\n            case \"unknown\": return prefix + \"info\";\n            case \"warning\": return prefix + \"warning\";\n            case \"normal\": return prefix + \"success\";\n            default: return prefix + \"error\";\n        }\n    };\n\n    showActions(incident) {\n        var modalScope = this.$scope.$new();\n        modalScope.actions = incident.Actions;\n        this.$rootScope.appEvent('show-modal', {\n            src: \"public/plugins/bosun-app/panels/incident-list/modal_actions.html\",\n            scope: modalScope\n        });\n    }\n\n    showEvents(incident) {\n        var modalScope = this.$scope.$new();\n        modalScope.events = incident.Events.reverse();\n        this.$rootScope.appEvent('show-modal', {\n            src: \"public/plugins/bosun-app/panels/incident-list/modal_events.html\",\n            scope: modalScope\n        });\n    }\n\n    multiAction() {\n        if (!this.selectedMultiAction) {\n            return\n        }\n        var incidents = _.filter(this.incidentList, (incident) => {\n            return incident.selected == true;\n        })\n        if (incidents.length == 0) {\n            return\n        }\n        for (var i of incidents) {\n            if (this.selectedMultiAction == \"forget\") {\n                if (i.CurrentStatus != \"unknown\") {\n                    this.$rootScope.appEvent('alert-error', [\"Action Error\", 'can not forget an alert that is not currently unknown: ' + i.AlertName + i.TagsString])\n                    return\n                }\n            }\n            if (this.selectedMultiAction == \"close\") {\n                if (i.CurrentStatus != \"normal\") {\n                    this.$rootScope.appEvent('alert-error', [\"Action Error\", 'can not close an alert that is not currently normal: ' + i.AlertName + i.TagsString])\n                    return\n                }\n            }\n            if (this.selectedMultiAction == \"ack\") {\n                if (!i.NeedAck) {\n                    this.$rootScope.appEvent('alert-error', [\"Action Error\", 'can not ack an alert that is already acknowledged: ' + i.AlertName + i.TagsString])\n                    return\n                }\n            }\n        }\n        this.showActionForm(incidents, this.selectedMultiAction)\n    }\n\n    // incidents can be an incident, but also an [] of incidents    \n    showActionForm(incidents, action) {\n        if (!Array.isArray(incidents)) {\n            incidents = [incidents]\n        }\n        var modalScope = this.$scope.$new();\n        modalScope.incidents = incidents;\n        modalScope.action = action;\n        this.$rootScope.appEvent('show-modal', {\n            src: \"public/plugins/bosun-app/panels/incident-list/modal_action.html\",\n            scope: modalScope\n        });\n    }\n\n    submitActionForm(incidents, action) {\n        var self = this;\n        if (!this.actionForm) {\n            self.$rootScope.appEvent('alert-error', ['Action Error', 'must fill out form fields']);\n            return;\n        }\n        var actionForm = this.actionForm;\n        var actionRequest = {\n            Type: action,\n            User: actionForm.User || self.user.login,\n            Message: actionForm.Message,\n            Notify: actionForm.Notify == true,\n        }\n        if (actionRequest.Message == \"\" && actionRequest.Notify == true) {\n            self.$rootScope.appEvent('alert-error', ['Action Error', 'must fill out message field when notifying']);\n            return;\n        }\n        actionRequest.Keys = _.map(incidents, (incident) => {\n            return incident.AlertName + incident.TagsString;\n        });\n        this.datasourceSrv.get(this.panel.datasource).\n            then(datasource => {\n                datasource.submitAction(actionRequest).then(() =>\n                    self.refreshData().then(() => {self.actionForm.Message = \"\";}) // clear message\n                )\n            })\n    }\n\n    showBody(incident) {\n        this.datasourceSrv.get(this.panel.datasource).\n            then(datasource => {\n                datasource.AlertBodyHTML(incident.AlertName + incident.TagsString).then(data => {\n                    var modalScope = this.$rootScope.$new();\n                    modalScope.bodyHTML = data;\n                    this.$rootScope.appEvent('show-modal', {\n                        src: \"public/plugins/bosun-app/panels/incident-list/modal_body.html\",\n                        scope: modalScope\n                    });\n                })\n            });\n    }\n\n    // Enable selecting a range of checkboxes with shift-click\n    selectRange($event, idx) {\n        if ($event.shiftKey && this.$scope.lastChecked != undefined) {\n            // This makes the selection \"flash\" and then get removed\n            // not sure of a good way to prevent it\n            document.getSelection().removeAllRanges();\n            var start = Math.min(idx, this.$scope.lastChecked);\n            var end = Math.max(idx, this.$scope.lastChecked);\n            for (var i = start; i <= end; i++) {\n                this.incidentList[i].selected = true;\n            }\n        }\n        this.$scope.lastChecked = idx;\n    }\n\n}\n\nBosunIncidentListCtrl.templateUrl = 'panels/incident-list/module.html';\n\nexport {\nBosunIncidentListCtrl,\nBosunIncidentListCtrl as PanelCtrl\n};\n"]}